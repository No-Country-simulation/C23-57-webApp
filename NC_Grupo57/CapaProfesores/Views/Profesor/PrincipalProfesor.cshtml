@model List<CapaDominio.Materia>
@{
    ViewBag.Title = "PrincipalProfesor";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var alumnosPorMateria = ViewBag.AlumnosPorMateria as Dictionary<int, List<CapaDominio.Usuario>>;
    var materiasProfesor = ViewBag.MateriasProfesor as List<CapaDominio.MateriaProfesor>;
    var tiposNota = ViewBag.TiposNota as List<CapaDominio.TipoNota>;
    var notaSeleccionada = ViewBag.NotaSeleccionada as CapaDominio.NotaAlumno;
    @Styles.Render("~/styles/StyPpalProfesor.css")
}
<!--
    En este HTML era que de alguna forma aparezcan las materias que dicta el profesor, como en la de
    admin puede ser un desplegable, botones, solapas o lo que mejor les parezca y un listado el cual se
    va a llenar desde el back con el listado de alumnos que tiene en esa materia y cada fial debería tener
    un botón con un + o algo así ya que con ese botón vamos a hacer desde el back que el profesor pueda
    cargar notas a cada alumno. originalmente la idea
    era que cada profesor pueda generar eventos para calificar, como por ejemplo exámenes, trabajos prácticos
    y demás pero no creo que podamos llegar con los tiempso para poder hacerlo. Por lo que desde el back, en
    principio vamos a hardcodear que son X cantidad de notas al año.
-->
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profesores - EDU Flow</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css"> <!-- Agregado -->
    <link rel="icon" href="~/imagenes/faviicon5.png">
</head>

<body>
    <header class="header d-flex justify-content-between align-items-center p-3 bg-light">
        <div class="logo">
            <div class="logo"><img class="logo" src="../imagenes/logo2 1.png" alt="Logo"></div>
        </div>
        <button class="nav-button" onclick="location.href='@Url.Action("CerrarSesion", "Login")'">Cerrar Sesión</button>
    </header>

    <div class="container mt-4">
        <h2>Materias del Profesor</h2>

        @if (Model != null && Model.Any())
        {
            foreach (var materia in Model)
            {
                var materiaProfesor = materiasProfesor?.FirstOrDefault(mp => mp.Id_Materia == materia.Id_Materia);
                var codigoComision = materiaProfesor?.Codigo_Comision ?? 0;

                <div class="card mb-3">
                    <div class="card-header bg-primary text-white">
                        <strong>@materia.Nombre</strong>
                    </div>
                    <div class="card-body">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Alumno</th>
                                    <th>Cargar Nota</th>
                                    <th>Ver Notas</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (alumnosPorMateria != null && alumnosPorMateria.ContainsKey(materia.Id_Materia) && alumnosPorMateria[materia.Id_Materia].Count > 0)
                                {

                                    foreach (var alumno in alumnosPorMateria[materia.Id_Materia])
                                    {
                                        <tr>
                                            <td>@alumno.Nombre @alumno.Apellido (@alumno.DNI)</td>
                                            <td>
                                                <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#modalCargarNota_@alumno.Id_Usuario@materia.Id_Materia">+</button>
                                            </td>
                                            <td>
                                                @using (Html.BeginForm("VerNotasAlumno", "Profesor", FormMethod.Post))
                                                {
                                                    @Html.Hidden("Id_Usuario_Alumno", alumno.Id_Usuario)
                                                    @Html.Hidden("Codigo_Comision", codigoComision)
                                                    @Html.Hidden("idMateria", materia.Id_Materia)

                                                    <button type="submit" class="btn btn-info">
                                                        <i class="bi bi-eye"></i>
                                                    </button>

                                                }
                                            </td>
                                        </tr>

                                        <!-- Modal para Cargar Nota -->
                                        <div class="modal fade" id="modalCargarNota_@alumno.Id_Usuario@materia.Id_Materia" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
                                            <div class="modal-dialog">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <h5 class="modal-title">Cargar Nota - @alumno.Nombre @alumno.Apellido</h5>
                                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                    </div>
                                                    <div class="modal-body text-start">
                                                        @using (Html.BeginForm("CargarNota", "Profesor", FormMethod.Post))
                                                        {
                                                            @Html.Hidden("Id_Usuario_Alumno", alumno.Id_Usuario)
                                                            @Html.Hidden("Codigo_Comision", codigoComision)

                                                            <div class="mb-3">
                                                                <label class="form-label">Tipo de Nota</label>
                                                                @Html.DropDownList("Id_Tipo_Nota", new SelectList(tiposNota, "Id_Tipo_Nota", "Descripcion"), "Seleccione...", new { @class = "form-control" })
                                                            </div>

                                                            <div class="mb-3">
                                                                <label class="form-label">Calificación</label>
                                                                <input type="number" name="Calificacion" class="form-control" step="0.01" min="0" max="10" required>
                                                            </div>

                                                            <div class="mb-3">
                                                                <label class="form-label">Observaciones</label>
                                                                <textarea name="Observaciones" class="form-control"></textarea>
                                                            </div>

                                                            <div class="modal-footer">
                                                                <button type="submit" class="btn btn-primary">Guardar Nota</button>
                                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- Fin del Modal -->
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="3">No hay alumnos inscritos en esta materia.</td>
                                    </tr>
                                }
                            </tbody>


                        </table>

                    </div>
                </div>
            }
        }
        else
        {
            <p>No se encontraron materias asignadas.</p>
        }
    </div>

    <!-- Ver Notas - Modal de edición incluida -->
    @if (ViewBag.NotasxAlumno != null && ViewBag.IdAlumnoSeleccionado != null)
    {
        var notasAlumno = ViewBag.NotasxAlumno as List<CapaDominio.NotaAlumno>;
        var idAlumnoSeleccionado = ViewBag.IdAlumnoSeleccionado;
        var idMateriaSeleccionada = ViewBag.IdMateriaSeleccionada;
        var materiaProfesor = materiasProfesor?.FirstOrDefault(mp => mp.Id_Materia == idMateriaSeleccionada);
        var codigoComision = materiaProfesor?.Codigo_Comision ?? 0;

        <div class="modal fade show d-block" tabindex="-1" id="modalVerNotas">


            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Notas del Alumno</h5>
                        <a href="@Url.Action("PrincipalProfesor", "Profesor")" class="btn-close"></a>
                    </div>
                    <div class="modal-body">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Nombre</th>
                                    <th>Apellido</th>
                                    <th>DNI</th>
                                    <th>Tipo de Nota</th>
                                    <th>Calificación</th>
                                    <th>Observaciones</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (notasAlumno.Any())
                                {
                                    foreach (var nota in notasAlumno)
                                    {
                                        <tr>
                                            <td>@nota.NombreAlumno</td>
                                            <td>@nota.ApellidoAlumno</td>
                                            <td>@nota.DNI</td>
                                            <td>@nota.TipoNota</td>
                                            <td>@nota.Calificacion</td>
                                            <td>@nota.Observaciones</td>
                                            <td>
                                                @using (Html.BeginForm("EditarNota", "Profesor", FormMethod.Post))
                                                {
                                                    @Html.Hidden("Id_Nota", nota.Id_TipoNota)
                                                    @Html.Hidden("Id_Usuario_Alumno", nota.Id_Usuario)
                                                    @Html.Hidden("Codigo_Comision", codigoComision)
                                                    @Html.Hidden("Id_Tipo_Nota", nota.Id_TipoNota)
                                                    @Html.Hidden("Calificacion", nota.Calificacion)
                                                    @Html.Hidden("Observaciones", nota.Observaciones)

                                                    <button type="button" class="btn btn-warning"
                                                            onclick="abrirModalEditarNota('@nota.Id_Usuario', '@codigoComision', '@nota.Id_TipoNota', '@nota.TipoNota', '@nota.Calificacion', '@nota.Observaciones')">
                                                        <i class="bi bi-pencil"></i>
                                                    </button>

                                                }
                                            </td>
                                        </tr>
                                    }
                                }

                                else
                                {
                                    <tr>
                                        <td colspan="7">No hay notas registradas.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="modalEditarNota" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modalTitle">Editar Nota</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body text-start">
                        @using (Html.BeginForm("EditarNota", "Profesor", FormMethod.Post, new { id = "formEditarNota" }))
                        {
                            @Html.Hidden("Id_Usuario_Alumno")
                            @Html.Hidden("Codigo_Comision")
                            @Html.Hidden("Id_Tipo_Nota")


                            <input type="hidden" name="Id_Tipo_Nota">


                            <div class="mb-3">
                                <label class="form-label">Tipo de Nota</label>
                                <input type="text" id="tipoNota" class="form-control" disabled>
                            </div>


                            <div class="mb-3">
                                <label class="form-label">Calificación</label>
                                <input type="number" name="Calificacion" id="calificacion" class="form-control" step="0.01" min="0" max="10" required>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Observaciones</label>
                                <textarea name="Observaciones" id="observaciones" class="form-control"></textarea>
                            </div>

                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary" onclick="document.getElementById('formEditarNota').submit();">Guardar Cambios</button>
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }



    <!-- Modal de Alerta cuando no hay notas -->
    <div class="modal fade" id="modalNoNotas" tabindex="-1" aria-labelledby="modalNoNotasLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Aviso</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <p>El alumno seleccionado no tiene notas registradas en esta materia.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>



    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        var noNotas = '@(ViewBag.NoNotasAlumno ?? false)';
        if (noNotas === 'True') {
            var modalNoNotas = new bootstrap.Modal(document.getElementById('modalNoNotas'));
            modalNoNotas.show();
        }
    
        function abrirModalEditarNota(idUsuario, codigoComision, idTipoNota, tipoNotaDescripcion, calificacion, observaciones) {
            var modal = document.getElementById('modalEditarNota');

            // Asignar valores a los inputs ocultos
            modal.querySelector("input[name='Id_Usuario_Alumno']").value = idUsuario;
            modal.querySelector("input[name='Codigo_Comision']").value = codigoComision;
            modal.querySelector("input[name='Id_Tipo_Nota']").value = idTipoNota;  // Se enviará en el formulario

            // Mostrar la descripción del tipo de nota en un campo deshabilitado
            modal.querySelector("#tipoNota").value = tipoNotaDescripcion;  // Solo visible, no se envía

            // Asignar calificación y observaciones
            modal.querySelector("#calificacion").value = calificacion;
            modal.querySelector("#observaciones").value = observaciones;

            // Mostrar el modal
            var bootstrapModal = new bootstrap.Modal(modal);
            bootstrapModal.show();
        }



    </script>

</body>

</html>